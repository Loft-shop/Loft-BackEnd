networks:
  loftnet:
    driver: bridge  
services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: Devp@ssw0rddB4589
      POSTGRES_DB: test_loft_shop
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./scripts/postgres-init:/docker-entrypoint-initdb.d:ro
    networks:
      - loftnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U developer"]
      interval: 5s
      timeout: 5s
      retries: 10

  apigateway:
    build:
      context: .
      dockerfile: src/ApiGateway/Dockerfile
    container_name: apigateway
    ports:
      - "5000:8080"
    depends_on:
      - cartservice
      - orderservice
      - productservice
      - userservice
      - shippingaddressservice
      - paymentservice
    networks:
      - loftnet
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080

  cartservice:
    build:
      context: .
      dockerfile: src/CartService/Dockerfile
    container_name: cartservice
    ports:
      - "5003:8080"
    networks:
      - loftnet
    depends_on:
      - postgres

  orderservice:
    build:
      context: .
      dockerfile: src/OrderService/Dockerfile
    container_name: orderservice
    ports:
      - "5001:8080"
    environment:
      ASPNETCORE_URLS: http://0.0.0.0:8080
      Services__CartService: http://cartservice:8080
      Services__ProductService: http://productservice:8080
      Services__UserService: http://userservice:8080
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=test_loft_shop;Username=developer;Password=Devp@ssw0rddB4589"
    networks:
      - loftnet
    depends_on:
      - cartservice
      - productservice
      - userservice
      - postgres

  paymentservice:
    build:
      context: .
      dockerfile: src/PaymentService/Dockerfile
    container_name: paymentservice
    ports:
      - "5006:8080"
    networks:
      - loftnet
    depends_on:
      - postgres

  productservice:
    build:
      context: .
      dockerfile: src/ProductService/Dockerfile
    container_name: productservice
    ports:
      - "5002:8080"
    networks:
      - loftnet
    depends_on:
      - postgres

  shippingaddressservice:
    build:
      context: .
      dockerfile: src/ShippingAddressService/Dockerfile
    container_name: shippingaddressservice
    ports:
      - "5005:8080"
    networks:
      - loftnet
    depends_on:
      - postgres

  userservice:
    build:
      context: .
      dockerfile: src/UserService/Dockerfile
    container_name: userservice
    ports:
      - "5004:8080"
    environment:
      ASPNETCORE_URLS: http://0.0.0.0:8080
      Jwt__Key: ReplaceThisWithASecretKeyForDevOnlyChangeMe
      Jwt__Issuer: LoftUserService
      Jwt__Audience: LoftUsers
      Jwt__ExpireMinutes: "60"
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=test_loft_shop;Username=developer;Password=Devp@ssw0rddB4589"
    networks:
      - loftnet
    depends_on:
      - postgres

volumes:
  pgdata:
    driver: local
